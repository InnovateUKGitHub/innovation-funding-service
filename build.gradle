import org.ajoberstar.grgit.*

buildscript {
    ext {
        // Important versions tracked here
        // Spring boot around line 27
        springBootVersion = "2.4.2"
        springCloudVersion = "2020.0.1"
        dependencyPluginVersion = "1.0.11.RELEASE"
    }
    repositories {
        maven { url "http://dl.bintray.com/robfletcher/gradle-plugins" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyPluginVersion}"
        classpath "com.bluepapa32:gradle-watch-plugin:0.1.5"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0"
        classpath "org.ajoberstar.grgit:grgit-core:4.0.2"
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.15.0"
    //id 'org.springframework.boot' version "2.4.2" apply false
}

// This enables spring boot dependency mgt without enabling the plugin
// https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#managing-dependencies-dependency-management-plugin-using-in-isolation
apply plugin: 'io.spring.dependency-management'
dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }

    dependencies {
        dependency group:'org.flywaydb', name:'flyway-core', version:'5.2.4'
        dependency group:'com.google.guava', name:'guava', version:'29.0-jre'
        dependency group:'org.apache.commons', name:'commons-lang3', version:'3.11'
    }
}

apply from: "gradle-support/versions.gradle"
apply from: "gradle-support/sonarqube.gradle"
apply from: "gradle-support/certificates.gradle"
apply from: "gradle-support/taurus.gradle"
apply from: "gradle-support/gradle-versions.gradle"
apply from: "gradle-support/dependency-check.gradle"
apply from: "gradle-support/pull-all-base-images.gradle"
apply from: "gradle-support/stage-base-images.gradle"

if (project.hasProperty('ifs.zipkin.enabled') ? project.property('ifs.zipkin.enabled').toBoolean() : false) {
    apply from: "gradle-support/zipkin.gradle"
}

ext.ifsFinanceTotalsEnabled = project.properties['ifs.finance.totals.enabled'] ?: true

ext.getCurrentBranchName = {
    def repo = Grgit.open(dir: '.')
    return repo.branch.getCurrent().name
}

def isNamedEnv() {
    return ["ifs-sysint", "ifs-uat", "ifs-demo", "ifs-perf", "ifs-prod"].contains(openshiftEnv)
}

def isNotProductionEnv() {
    !"ifs-prod".equals(openshiftEnv)
}

def isSysIntEnv() {
    "ifs-sysint".equals(openshiftEnv)
}

def isAcceptanceBranch() {
    getCurrentBranchName().equals("acceptance")
}

if (!project.hasProperty('osTestArgs')) {
    ext.osTestArgs = ""
}

apply from: "gradle-support/openshift-support.gradle"

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            // filters out any version numbers ending in rejected. e.g 1.0.0-rc.
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'pr1', 'Beta'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}


wrapper {
    gradleVersion = '5.5'
}

ext.zipkinEnabled = project.hasProperty('ifs.zipkin.enabled') ? project.property('ifs.zipkin.enabled').toBoolean() : false

def nexusRepository = project.hasProperty('nexusRepository') ? project.property('nexusRepository').toString() : ""

apply plugin: 'maven-publish'

def osFileMap = [
        [name:'cache-config', type: 'config-maps'],
        [name:'feature-toggle-config', type: 'config-maps'],
        [name:'data-service-config', type: 'config-maps'],
        [name:'db-config', type: 'config-maps'],
        [name:'docusign-config', type: 'config-maps'],
        [name:'finance-db-config', type: 'config-maps'],
        [name:'flyway-config', type: 'config-maps'],
        [name:'idp-config', type: 'config-maps'],
        [name:'ldap-config', type: 'config-maps'],
        [name:'new-relic-config', type: 'config-maps'],
        [name:'performance-config', type: 'config-maps'],
        [name:'shibboleth-config', type: 'config-maps'],
        [name:'survey-db-config', type: 'config-maps'],
        [name:'web-config', type: 'config-maps'],

        [name:'67-db-anonymised-data', type: 'db-anonymised-data'],

        [name:'66-dbbaseline', type: 'db-baseline'],

        [name:'66-dbreset', type: 'db-reset'],

        [name:'92-finance-data-service-sync', type: 'finance-data-service-sync'],

        [name:'10-gluster-svc', type: 'gluster'],
        [name:'11-gluster-endpoints', type: 'gluster'],
        [name:'12-file-upload-claim', type: 'gluster'],

        [name:'12-ifs-demo-file-upload-claim', type: 'gluster'],
        [name:'12-ifs-perf-file-upload-claim', type: 'gluster'],
        [name:'12-ifs-prod-file-upload-claim', type: 'gluster'],
        [name:'12-ifs-sysint-file-upload-claim', type: 'gluster'],
        [name:'12-ifs-uat-file-upload-claim', type: 'gluster'],

        [name:'4-application-service', type: 'ifs-services'],
        [name:'5-front-door-service', type: 'ifs-services'],
        [name:'31-data-service', type: 'ifs-services'],
        [name:'32-finance-data-service', type: 'ifs-services'],
        [name:'41-assessment-svc', type: 'ifs-services'],
        [name:'42-competition-mgt-svc', type: 'ifs-services'],
        [name:'43-project-setup-mgt-svc', type: 'ifs-services'],
        [name:'44-project-setup-svc', type: 'ifs-services'],
        [name:'45-registration-svc', type: 'ifs-services'],

        [name:'21-mail', type: 'mail'],

        [name:'3-finance-totals-mysql', type: 'mysql'],
        [name:'3-mysql', type: 'mysql'],
        [name:'3-zipkin-mysql', type: 'mysql'],
        [name:'survey-mysql', type: 'mysql'],

        [name:'91-mysql-client', type: 'mysql-client'],

        [name:'cache-provider', type: 'redis'],

        [name:'7-chrome', type: 'robot-tests'],
        [name:'8-robot', type: 'robot-tests'],

        [name:'idp-route', type: 'routes'],
        [name:'mail-route', type: 'routes'],
        [name:'shib-route', type: 'routes'],

        [name:'5-shib', type: 'shib'],
        [name:'55-ldap', type: 'shib'],
        [name:'56-idp', type: 'shib'],

        [name:'80-sil-stub', type: 'sil-stub'],

        [name:'survey-data-service', type: 'survey'],
        [name:'survey-service', type: 'survey']
]

publishing {
    publications {
        osFileMap.each {
            osFile ->
                "$osFile.name"(MavenPublication) {
                    groupId "org.innovateuk.ifs."+osFile.type
                    if (project.hasProperty('ifs.version')) {
                        version = project.findProperty('ifs.version')
                    }
                    artifactId = osFile.name

                    artifact("os-files/${osFile.type}/${osFile.name}.yml")

                }
        }
    }

    repositories {
        maven {
            credentials {
                username project.findProperty("nexusUsername")
                password project.findProperty("nexusPassword")
            }

            if (nexusRepository.equals("snapshots")) {
                url "https://devops.innovateuk.org/binaries/repository/ifs-config-snapshots/"
            } else {
                url "https://devops.innovateuk.org/binaries/repository/ifs-config-releases/"
            }
        }
    }
}