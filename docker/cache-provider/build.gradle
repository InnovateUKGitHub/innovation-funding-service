apply from: rootProject.file("gradle-support/openshift-build.gradle")

buildscript {
    repositories {
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/"}
        mavenCentral()
    }
}

buildDocker.enabled = false
tagDocker.enabled = false
osStageRemote.enabled = false

createContainer.containerName = "cache-provider"
createContainer.containerId = "cache-provider"
createContainer.imageId = "docker-ifs.devops.innovateuk.org/releases/cache-provider:" + cacheProviderVersion

tagDocker.onlyIf { !isNamedEnv() }
tagDocker.repository = project.dockerRegistry + "/" + openshiftEnv + "/cache-provider"
tagDocker.imageId = "innovateuk/cache-provider:" + cacheProviderVersion
tagDocker.tag = cacheProviderVersion

tagDockerLocal.imageId = "innovateuk/cache-provider:" + cacheProviderVersion
tagDockerLocal.tag = cacheProviderVersion
tagDockerLocal {
    doFirst {
        repository = getLocalOCCredentials().url + "/" + openshiftEnv + "/cache-provider"
        tag = cacheProviderVersion
    }
}

osStageLocal.tag = cacheProviderVersion
osStageLocal {
    doFirst {
        registryCredentials = getLocalOCCredentials()
        imageName = registryCredentials.url + "/" + openshiftEnv + "/cache-provider"
    }
}


osStageRemote.onlyIf { !isNamedEnv() }
osStageRemote.imageName = getRemoteOCCredentials().url + "/" + openshiftEnv + "/cache-provider"
osStageRemote.tag = cacheProviderVersion

def enabled = project.hasProperty('initialise') ? project.property('initialise').toBoolean() : false
[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}