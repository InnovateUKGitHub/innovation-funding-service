apply from: rootProject.file("gradle-support/openshift-build.gradle")

buildscript {
    repositories { jcenter() }
}
def redisVersion = "5.0.5"

buildDocker.inputDir = project.file("$project.projectDir/docker")
buildDocker.tag = "innovateuk/cache-provider:" + redisVersion

createContainer.containerName = "cache-provider"
createContainer.containerId = "cache-provider"
createContainer.imageId = "innovateuk/cache-provider:" + redisVersion

tagDocker.onlyIf { !isNamedEnv() }
tagDocker.repository = project.dockerRegistry + "/" + openshiftEnv + "/cache-provider"
tagDocker.imageId = "innovateuk/cache-provider:" + redisVersion
tagDocker.tag = redisVersion

tagDockerLocal.imageId = "innovateuk/cache-provider:" + redisVersion
tagDockerLocal.tag = redisVersion
tagDockerLocal {
    doFirst {
        repository = getLocalOCCredentials().url + "/" + openshiftEnv + "/cache-provider"
        tag = redisVersion
    }
}

osStageLocal.tag = redisVersion
osStageLocal {
    doFirst {
        registryCredentials = getLocalOCCredentials()
        imageName = registryCredentials.url + "/" + openshiftEnv + "/cache-provider"
    }
}


osStageRemote.onlyIf { !isNamedEnv() }
osStageRemote.imageName = getRemoteOCCredentials().url + "/" + openshiftEnv + "/cache-provider"
osStageRemote.tag = redisVersion

def enabled = project.hasProperty('initialise') ? project.property('initialise').toBoolean() : false
[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}