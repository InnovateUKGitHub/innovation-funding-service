apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/openshift-build.gradle")
apply from: rootProject.file("gradle-support/prepare-docker.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

buildscript {
    ext {
        serverContext = '/project-setup-management'
    }
}

group 'innovateuk'
version project.version

apply plugin: 'idea'

project.version = nexusVersion

dependencies {
    compile project(':ifs-web-service:ifs-web-core')
    compile project(':ifs-web-service:ifs-project-commons')
    compile project(':ifs-web-service:ifs-application-commons')

//    testCompile project(path: ":ifs-resources", configuration: 'testArtifacts')
    testCompile "org.innovateuk.ifs.libraries:ifs-commons"
    testCompile "org.innovateuk.ifs.libraries:ifs-security-test"

    testCompile project(path: ":ifs-web-service:ifs-web-core", configuration: 'testArtifacts')
    testCompile project(path: ":ifs-web-service:ifs-application-commons", configuration: 'testArtifacts')
    testCompile project(path: ":ifs-web-service:ifs-project-commons", configuration: 'testArtifacts')

    testCompile "com.opencsv:opencsv"
    testCompile "junit:junit"
}

processResources {
    filesMatching("*.properties") {
        expand project.properties
    }
    if (project.hasProperty("profile") && project.profile == "automated") {
        exclude '**/application.properties'
    }
}

jar.dependsOn ":ifs-web-service:gulp_default"
processResources.dependsOn ":ifs-web-service:applyProfiles"