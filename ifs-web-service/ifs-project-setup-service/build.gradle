apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/prepare-docker.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

buildscript {
    ext {
        serverContext = '/project-setup'
    }
}

group 'innovateuk'
version project.version

apply plugin: 'idea'

dependencies {
    implementation project(':ifs-web-service:ifs-web-core')
    implementation "org.innovateuk.ifs.libraries:ifs-project-commons"
    implementation "org.innovateuk.ifs.libraries:ifs-application-commons"
    implementation 'org.innovateuk.ifs.libraries:ifs-assessment-commons'
    testImplementation "org.innovateuk.ifs.libraries:ifs-commons"
    testImplementation "org.innovateuk.ifs.libraries:ifs-security-test"
    testImplementation "org.innovateuk.ifs.libraries:ifs-web-commons-test"
    testImplementation "com.opencsv:opencsv"
    testImplementation "junit:junit"
    testImplementation "org.mockito:mockito-core"
}

processResources {
    filesMatching("*.properties") {
        expand project.properties
    }
    if (project.hasProperty("profile") && project.profile == "automated") {
        exclude '**/application.properties'
    }
}

jar.dependsOn ":ifs-web-service:gulp_default"
processResources.dependsOn ":ifs-web-service:applyProfiles"