apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/openshift-build.gradle")
apply from: rootProject.file("gradle-support/prepare-docker.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

ext.IFS_WEB_VIRTUALASSISTANT_BOTSECRET = ext.has('ifs.web.virtualAssistant.botSecret') ? ext.get('ifs.web.virtualAssistant.botSecret') : 'authSecretNotConfigured'
ext.IFS_WEB_VIRTUALASSISTANT_BOTID = ext.has('ifs.web.virtualAssistant.botId') ? ext.get('ifs.web.virtualAssistant.botId') : 'ukridev-qnamaker-bot'

group 'innovateuk'
version project.version

apply plugin: 'idea'

project.version = nexusVersion

dependencies {
    compile project(':ifs-web-service:ifs-web-core')
    compile "org.innovateuk.ifs.libraries:ifs-application-commons"

    testCompile "org.innovateuk.ifs.libraries:ifs-commons"
    testCompile "org.innovateuk.ifs.libraries:ifs-security-test"
    testCompile "org.innovateuk.ifs.libraries:ifs-web-commons-test"

    testCompile "com.opencsv:opencsv"
    testCompile "junit:junit"
    testCompile "org.mockito:mockito-core"
}

jar.dependsOn ":ifs-web-service:gulp_default"
processResources.dependsOn ":ifs-web-service:applyProfiles"