def targetBuildFile = project.hasProperty("profile") ? "${project.profile}-build.gradle" : "docker-build.gradle"
if (file(targetBuildFile).exists()) {
    apply from: targetBuildFile
}

apply from: rootProject.file("gradle-support/java.gradle")
apply from: rootProject.file("gradle-support/bom.gradle")
apply from: rootProject.file("gradle-support/mapstruct.gradle")

group 'innovateuk'
version project.version

apply plugin: 'idea'

ext.ifsWebSystemUserId = "8394d970-b250-4b15-9621-3534325691b4"

configurations {
    testArtifacts
}
task testJar(type: Jar) {
    baseName = "${project.name}-test"
    from sourceSets.test.output
}
artifacts {
    testArtifacts testJar
}

dependencies {
    compile project(":ifs-resources")
    compile project(":ifs-security")

    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.apache.httpcomponents:httpasyncclient"

    testCompile project(path: ":ifs-resources", configuration: 'testArtifacts')
    testCompile project(path: ":ifs-commons", configuration: 'testArtifacts')
    testCompile project(path: ":ifs-security", configuration: 'testArtifacts')

    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile 'org.springframework:spring-webmvc'

    testCompile "net.sf.opencsv:opencsv:2.3"
    testCompile "com.opencsv:opencsv"
    testCompile 'org.assertj:assertj-core'

}

