def targetBuild = hasProperty('profile') ? profile : 'docker'

apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/openshift-build.gradle")
apply from: rootProject.file("gradle-support/prepare-docker.gradle")
apply from: rootProject.file("gradle-support/mapstruct.gradle")

apply from: rootProject.file("gradle-support/profile-handler.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

processResources.dependsOn applyProfiles

apply from: "../flyway.gradle"
apply plugin: 'idea'

group 'innovateuk'
version project.version

project.version = nexusVersion
deploy.dependsOn ":docker:ifs-mysql:ifs-finance-database:wait"
deploy.mustRunAfter ":docker:ifs-mysql:ifs-finance-database:deploy"

deployNexusLocal.dependsOn ":docker:ifs-mysql:ifs-finance-database:waitNexusDeploy"
deployNexusLocal.mustRunAfter ":docker:ifs-mysql:ifs-finance-database:deployNexusLocal"


ext.dockerComposeFile = "docker-compose/docker-compose-finance-totals.yml"
ext.ifsWebSystemUserId = "8394d970-b250-4b15-9621-3534325691b4"

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile "org.springframework.boot:spring-boot-starter-security"
    compile 'commons-codec:commons-codec'

    compile project(':ifs-commons')
    compile project(':ifs-resources')
    compile project(':ifs-security')

    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testCompile project(path: ":ifs-resources", configuration: 'testArtifacts')
    testCompile project(path: ":ifs-commons", configuration: 'testArtifacts')
    testCompile project(path: ":ifs-security", configuration: 'testArtifacts')
}

test {
    outputs.dir snippetsDir
    if (project.hasProperty('excludeTests')) {
        exclude "${project.excludeTests}"
    }

    if (project.hasProperty('testGroups')) {
        systemProperty 'testGroups', project.getProperty('testGroups')
    }

}

flywayClean.dependsOn applyProfiles
flywayMigrate.dependsOn processResources

ext.serverPort = 8080
ext.ifsFlywayLocations = "db/migration"

