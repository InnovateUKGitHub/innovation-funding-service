def targetBuild = hasProperty('profile') ? profile : 'docker'

apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/mapstruct.gradle")

apply from: rootProject.file("gradle-support/profile-handler.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

apply from: "../flyway.gradle"

group 'innovateuk'
version project.version

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    if (isStubDevMode()) {
        developmentOnly "org.springframework.boot:spring-boot-devtools"
        developmentOnly project(":common:starter:ifs-starter-stubdev")
        developmentOnly project(":common:starter:ifs-starter-swagger-ui")
    }

    implementation 'commons-codec:commons-codec'

    implementation project(":common:ifs-commons")
    implementation project(":common:ifs-resources")
    implementation project(":common:ifs-security")
    implementation project(":common:ifs-error-util")
    implementation project(":common:ifs-rest-util")

    testImplementation project(":common:ifs-commons-test")
    testImplementation project(":common:ifs-security-test")

    testImplementation "junit:junit"
}

test {
    if (project.hasProperty('excludeTests')) {
        exclude "${project.excludeTests}"
    }

    if (project.hasProperty('testGroups')) {
        systemProperty 'testGroups', project.getProperty('testGroups')
    }

}
