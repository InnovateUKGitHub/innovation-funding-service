def targetBuild = hasProperty('profile') ? profile : 'docker'

apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/mapstruct.gradle")

apply from: rootProject.file("gradle-support/profile-handler.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

apply from: "../flyway.gradle"

group 'innovateuk'
version project.version

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'commons-codec:commons-codec'
    implementation 'commons-io:commons-io'

    implementation "org.innovateuk.ifs.libraries:ifs-commons"
    implementation 'org.innovateuk.ifs.libraries:ifs-resources'
    implementation 'org.innovateuk.ifs.libraries:ifs-security'
    implementation 'org.innovateuk.ifs.libraries:ifs-error-util'
    implementation 'org.innovateuk.ifs.libraries:ifs-rest-util'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation "org.innovateuk.ifs.libraries:ifs-commons-test"
    testImplementation "org.innovateuk.ifs.libraries:ifs-security-test"

    testImplementation "junit:junit"
}

test {
    if (project.hasProperty('excludeTests')) {
        exclude "${project.excludeTests}"
    }

    if (project.hasProperty('testGroups')) {
        systemProperty 'testGroups', project.getProperty('testGroups')
    }

}
