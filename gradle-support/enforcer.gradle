// Prevent certain transitive dependencies being pulled in for security and other reasons
project.getConfigurations().all { config ->
    config.resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        // commons-logging is not required
        if (details.requested.name.equalsIgnoreCase("commons-logging")) {
            throw new GradleException(sprintf("commons-logging found %s.%s",
                    [details.requested.group, details.requested.version]))
        }
        // we use slf4j
        if (details.requested.name.equalsIgnoreCase("log4j-core")) {
            throw new GradleException(sprintf("log4j-core found %s.%s",
                    [details.requested.group, details.requested.version]))
        }

        if (details.requested.name.equalsIgnoreCase('netty') && details.requested.version == "3.10.6.Final") {
            details.useTarget group: 'io.netty', name: 'netty-all', version: '4.1.44.Final'
        }

        if (details.requested.group.equalsIgnoreCase("org.json") && details.requested.name.equalsIgnoreCase('json')) {
            details.useVersion("20180130")
        }

        if (details.requested.group.equalsIgnoreCase("org.apache.commons") && details.requested.name.equalsIgnoreCase('commons-compress')) {
            details.useVersion("1.21")
        }

        if (details.requested.group.equalsIgnoreCase("commons-io") && details.requested.name.equalsIgnoreCase('commons-io')) {
            details.useVersion("2.7")
        }

        if (details.requested.group.equalsIgnoreCase("com.amazonaws") && details.requested.name.equalsIgnoreCase('aws-java-sdk-s3')) {
            details.useVersion("1.12.261")
        }

        if (details.requested.group.equalsIgnoreCase("org.apache.pdfbox") && details.requested.name.equalsIgnoreCase('pdfbox')) {
            details.useVersion("2.0.24")
        }

        if (details.requested.group.equalsIgnoreCase("org.jsoup") && details.requested.name.equalsIgnoreCase('jsoup')) {
            details.useVersion("1.15.3")
        }

        if (details.requested.group.equalsIgnoreCase("org.apache.tika") && details.requested.name.equalsIgnoreCase('tika-core')) {
            details.useVersion("2.4.1")
        }

    }

}

