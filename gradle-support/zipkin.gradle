import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerRemoveContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStopContainer 

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: com.bmuschko.gradle.docker.DockerJavaApplicationPlugin

buildscript {


    repositories {
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/"}
        mavenCentral()
        google()
    }

    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:3.2.6"
    }

}


repositories {
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/"}
    mavenCentral()
    google()
}

task pullZipkin(type: Exec) {
    doFirst {
        commandLine 'docker', 'pull', 'openzipkin/zipkin'
    }
}

task stopZipkin(type: DockerStopContainer) {
    targetContainerId { createZipkin.getContainerId() }
    onError {
        //Deliberately ignore
    }
}

task removeZipkin(type: DockerRemoveContainer, dependsOn: stopZipkin) {
    targetContainerId { createZipkin.getContainerId() }
    onError {
        //Deliberately ignore
    }
}

task createZipkin(type: DockerCreateContainer, dependsOn: [pullZipkin, removeZipkin]) {
    image = "openzipkin/zipkin"
    imageId = "openzipkin/zipkin"
    hostName="zipkin"
    containerName="zipkin"
    containerId="zipkin"
    portBindings = ['9411:9411']
    network="ifs"
}

task deployZipkin(type: DockerStartContainer, dependsOn: createZipkin) {
    targetContainerId { createZipkin.getContainerId() }
}


