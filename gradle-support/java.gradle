apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jacocoTestReport{
    additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
        html.destination file("build/reports/jacoco/html")
    }
    executionData.from = files('build/jacoco/test.exec')
}

test {
    beforeTest { desc ->
        println "Executing test ${desc.className}.${desc.name}"
    }

    if (!['ifs-data-service', 'ifs-finance-data-service'].contains(project.name)) {
        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    }
}

repositories {
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/"}
    mavenCentral()
    maven {
        name 'ifs-libraries-snapshots'
        url "https://devops.innovateuk.org/binaries/repository/ifs-libraries-snapshots/"
        credentials {
            username project.findProperty("nexus_username")
            password project.findProperty("nexus_password")
        }
    }
    maven {
        name 'ifs-libraries'
        url "https://devops.innovateuk.org/binaries/repository/ifs-libraries/"
        credentials {
            username project.findProperty("nexus_username")
            password project.findProperty("nexus_password")
        }
    }
    maven {
        name 'local'
        // Users can specify maven_local in ~/.gradle/gradle.properties or let it default to $HOME/.m2/repository
        url project.findProperty("maven_local") ?: System.getenv('HOME') + "/.m2/repository"
    }
}

jar {
    manifest.attributes provider: 'gradle'
}

compileJava {
    options.compilerArgs += '-parameters'
}

compileTestJava {
    options.compilerArgs += '-parameters'
}

test.finalizedBy jacocoTestReport