apply from: rootProject.file("gradle-support/profile-handler.gradle")
apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/jib.gradle")

group 'innovateuk'
version project.version

processResources.dependsOn applyProfiles


dependencies {
    implementation "org.innovateuk.ifs.libraries:ifs-commons"
    implementation "org.innovateuk.ifs.libraries:ifs-sil-resources"
    implementation "org.innovateuk.ifs.libraries:ifs-rest-util"
    implementation 'org.innovateuk.ifs.libraries:ifs-error-util'

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'javax.mail:mail'

    testImplementation "junit:junit"
}

test {
    if (project.hasProperty('excludeTests')) {
        exclude "${project.excludeTests}"
    }

    if (project.hasProperty('testGroups')) {
        systemProperty 'testGroups', project.getProperty('testGroups')
    }
}

//
// The production application will use the SIL to send emails out.  For non-production environments, the IFS application
// can talk to a SIL stub within the IFS application itself.  The below configuration allows you to configure whether or
// not the stub will attempt to send emails out via an SMTP server, or simply log the emails being sent (it does this
// regardless)
//
ext.ifsSendMailLocally=true
ext.ifsSmtpHost="mail"
ext.ifsSmtpPort=8025
ext.ifsSmtpUser="smtp"
ext.ifsSmtpAuth=false
ext.ifsSmtpPassword="smtp"
ext.ifsSmtpTlsEnabled=false
ext.ifsMailTimeoutMillis=10000

